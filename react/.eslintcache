[{"/home/samil/project/TodoList/react/src/page/Header.js":"1","/home/samil/project/TodoList/react/src/components/TodoForm.js":"2","/home/samil/project/TodoList/react/src/redux/actions/todosAction.js":"3","/home/samil/project/TodoList/react/src/reportWebVitals.js":"4","/home/samil/project/TodoList/react/src/components/TodoListItem.js":"5","/home/samil/project/TodoList/react/src/components/Alert.js":"6","/home/samil/project/TodoList/react/src/index.js":"7","/home/samil/project/TodoList/react/src/page/TodoList.js":"8","/home/samil/project/TodoList/react/src/redux/reducers/todosReducer.js":"9","/home/samil/project/TodoList/react/src/redux/actions/alertAction.js":"10","/home/samil/project/TodoList/react/src/components/ButtonAddTodo.js":"11"},{"size":349,"mtime":1609005410867,"results":"12","hashOfConfig":"13"},{"size":1621,"mtime":1610360802859,"results":"14","hashOfConfig":"13"},{"size":1507,"mtime":1610470057652,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1609005410867,"results":"16","hashOfConfig":"13"},{"size":1445,"mtime":1610466064152,"results":"17","hashOfConfig":"13"},{"size":848,"mtime":1609005410863,"results":"18","hashOfConfig":"13"},{"size":378,"mtime":1609005410867,"results":"19","hashOfConfig":"13"},{"size":614,"mtime":1610361177286,"results":"20","hashOfConfig":"13"},{"size":1158,"mtime":1610470759762,"results":"21","hashOfConfig":"13"},{"size":290,"mtime":1609005410867,"results":"22","hashOfConfig":"13"},{"size":766,"mtime":1609005410863,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"u3ru84",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samil/project/TodoList/react/src/page/Header.js",["49"],"import React from 'react';\nimport SearchTodo from \"../components/SearchTodo\";\n\nconst Header = () => {\n    return (\n        <header>\n            <nav className=\"navbar navbar-light bg-light\">\n                <a className=\"navbar-brand\">Todo List</a>\n                <SearchTodo/>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","/home/samil/project/TodoList/react/src/components/TodoForm.js",["50"],"import React,{useEffect} from 'react';\nimport ButtonAddTodo from \"./ButtonAddTodo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addTodo, getTodo, handleText,} from \"../redux/actions/todosAction\";\nimport {showAlert} from \"../redux/actions/alertAction\";\nimport Alert from \"./Alert\";\n\n\nconst TodoForm = () => {\n\n    const textForm = useSelector(({todosReducer}) => todosReducer.text)\n    const dispatch = useDispatch()\n    const alertVisible = useSelector(({alertReducer}) => alertReducer.visible)\n\n    const handleAddTodo = (e) => {\n        e.preventDefault()\n        if (textForm !== '') {\n            dispatch(showAlert('success', `Заметка: '${textForm}' успешно добавлена!`\n            ))\n            dispatch(addTodo())\n        } else if (textForm === '') {\n            dispatch(showAlert('warning', 'Введите текст в поле ввода')\n            )\n        }\n    }\n\n    const inputValue = (e) => {\n        const value = e.target.value\n        dispatch(handleText(value))\n    }\n\n    useEffect(()=>{\n        dispatch(getTodo())\n    },[])\n\n    return (\n        <>\n            {alertVisible && <Alert/>}\n            <div>\n                <form className='d-flex' onSubmit={handleAddTodo}>\n                    <input\n                        onChange={inputValue}\n                        value={textForm} type=\"text\"\n                        className=\"form-control col-9\"\n                        placeholder=\"напиши заметку\"/>\n                    <ButtonAddTodo/>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default TodoForm;",["51","52"],"/home/samil/project/TodoList/react/src/redux/actions/todosAction.js",[],"/home/samil/project/TodoList/react/src/reportWebVitals.js",[],"/home/samil/project/TodoList/react/src/components/TodoListItem.js",["53","54","55"],"/home/samil/project/TodoList/react/src/components/Alert.js",["56"],"/home/samil/project/TodoList/react/src/index.js",[],"/home/samil/project/TodoList/react/src/page/TodoList.js",[],"/home/samil/project/TodoList/react/src/redux/reducers/todosReducer.js",[],"/home/samil/project/TodoList/react/src/redux/actions/alertAction.js",[],"/home/samil/project/TodoList/react/src/components/ButtonAddTodo.js",[],{"ruleId":"57","severity":1,"message":"58","line":8,"column":17,"nodeType":"59","endLine":8,"endColumn":45},{"ruleId":"60","severity":1,"message":"61","line":34,"column":7,"nodeType":"62","endLine":34,"endColumn":9,"suggestions":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":11,"column":12,"nodeType":"70","messageId":"71","endLine":11,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":11,"column":18,"nodeType":"70","messageId":"71","endLine":11,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":12,"column":12,"nodeType":"70","messageId":"71","endLine":12,"endColumn":21},{"ruleId":"68","severity":1,"message":"74","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'done' is assigned a value but never used.","Identifier","unusedVar","'setDone' is assigned a value but never used.","'important' is assigned a value but never used.","'useEffect' is defined but never used.",{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"80","text":"81"},[1047,1049],"[dispatch]"]