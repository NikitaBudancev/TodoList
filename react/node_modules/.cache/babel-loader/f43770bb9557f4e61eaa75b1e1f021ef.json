{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/samil/project/TodoList/react/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ButtonAddTodo from \"./ButtonAddTodo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, handleText } from \"../redux/actions/todosAction\";\nimport { showAlert } from \"../redux/actions/alertAction\";\nimport Alert from \"./Alert\";\n\nconst TodoForm = () => {\n  _s();\n\n  const textForm = useSelector(({\n    todosReducer\n  }) => todosReducer.text);\n  const dispatch = useDispatch();\n  const alertVisible = useSelector(({\n    alertReducer\n  }) => alertReducer.visible);\n\n  const handleAddTodo = e => {\n    e.preventDefault();\n\n    if (textForm !== '') {\n      dispatch(showAlert('success', `Заметка: '${textForm}' успешно добавлена!`));\n      dispatch(addTodo());\n    } else if (textForm === '') {\n      dispatch(showAlert('warning', 'Введите текст в поле ввода'));\n    }\n  };\n\n  const inputValue = e => {\n    const value = e.target.value;\n    dispatch(handleText(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alertVisible && /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex\",\n        onSubmit: handleAddTodo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: inputValue,\n          value: textForm,\n          type: \"text\",\n          className: \"form-control col-9\",\n          placeholder: \"\\u043D\\u0430\\u043F\\u0438\\u0448\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonAddTodo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoForm, \"mFMYo5UUiCmgjuyvl7iAQXeznPg=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/samil/project/TodoList/react/src/components/TodoForm.js"],"names":["React","ButtonAddTodo","useDispatch","useSelector","addTodo","handleText","showAlert","Alert","TodoForm","textForm","todosReducer","text","dispatch","alertVisible","alertReducer","visible","handleAddTodo","e","preventDefault","inputValue","value","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAmC,8BAAnC;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;AAACO,IAAAA;AAAD,GAAD,KAAoBA,YAAY,CAACC,IAAlC,CAA5B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,YAAY,GAAGV,WAAW,CAAC,CAAC;AAACW,IAAAA;AAAD,GAAD,KAAoBA,YAAY,CAACC,OAAlC,CAAhC;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIT,QAAQ,KAAK,EAAjB,EAAqB;AACjBG,MAAAA,QAAQ,CAACN,SAAS,CAAC,SAAD,EAAa,aAAYG,QAAS,sBAAlC,CAAV,CAAR;AAEAG,MAAAA,QAAQ,CAACR,OAAO,EAAR,CAAR;AACH,KAJD,MAIO,IAAIK,QAAQ,KAAK,EAAjB,EAAqB;AACxBG,MAAAA,QAAQ,CAACN,SAAS,CAAC,SAAD,EAAY,4BAAZ,CAAV,CAAR;AAEH;AACJ,GAVD;;AAYA,QAAMa,UAAU,GAAIF,CAAD,IAAO;AACtB,UAAMG,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAAvB;AACAR,IAAAA,QAAQ,CAACP,UAAU,CAACe,KAAD,CAAX,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,eACKP,YAAY,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADrB,eAEI;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAEG,aAAnC;AAAA,gCACI;AACI,UAAA,QAAQ,EAAEG,UADd;AAEI,UAAA,KAAK,EAAEV,QAFX;AAEqB,UAAA,IAAI,EAAC,MAF1B;AAGI,UAAA,SAAS,EAAC,oBAHd;AAII,UAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAeH,CAtCD;;GAAMD,Q;UAEeL,W,EACAD,W,EACIC,W;;;KAJnBK,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport ButtonAddTodo from \"./ButtonAddTodo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addTodo, handleText,} from \"../redux/actions/todosAction\";\nimport {showAlert} from \"../redux/actions/alertAction\";\nimport Alert from \"./Alert\";\n\nconst TodoForm = () => {\n\n    const textForm = useSelector(({todosReducer}) => todosReducer.text)\n    const dispatch = useDispatch()\n    const alertVisible = useSelector(({alertReducer}) => alertReducer.visible)\n\n    const handleAddTodo = (e) => {\n        e.preventDefault()\n        if (textForm !== '') {\n            dispatch(showAlert('success', `Заметка: '${textForm}' успешно добавлена!`\n            ))\n            dispatch(addTodo())\n        } else if (textForm === '') {\n            dispatch(showAlert('warning', 'Введите текст в поле ввода')\n            )\n        }\n    }\n\n    const inputValue = (e) => {\n        const value = e.target.value\n        dispatch(handleText(value))\n    }\n\n    return (\n        <>\n            {alertVisible && <Alert/>}\n            <div>\n                <form className='d-flex' onSubmit={handleAddTodo}>\n                    <input\n                        onChange={inputValue}\n                        value={textForm} type=\"text\"\n                        className=\"form-control col-9\"\n                        placeholder=\"напиши заметку\"/>\n                    <ButtonAddTodo/>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}